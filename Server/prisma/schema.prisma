generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  firstName     String
  lastName      String
  image         String?
  comment       Comment[]
  likes    Like[]
  ownedProducts Product[] @relation("Owner")
  createdAt     DateTime  @default(now())
}

model Product {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  product_name        String
  price               Float
  product_image       String[]
  product_description String
  userEmail           String
  likes    Like[]
  owner               User     @relation("Owner", fields: [userEmail], references: [email])

  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique(fields: [userEmail])
}

model Comment {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  content  String
  likes    Like[]
  comment   String
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  User      User?   @relation(fields: [userEmail], references: [email])
  userEmail           String
  createdAt   DateTime @default(now())
}

// model Category {
//   id       String    @id @default(auto()) @map("_id") @db.ObjectId
//   name     String
// }

model Like {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  userEmail  String
  product    Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId String @db.ObjectId
  User       User?    @relation(fields: [userEmail], references: [email])
  createdAt   DateTime @default(now())

}
